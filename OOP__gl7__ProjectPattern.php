<?php

/**

//--------------------------------------------------------------------------------------------------------------------------------------------//

// Назначение и применение проектных шаблонов

• Основы шаблонов. Что такое проектные шаблоны?
• Структура шаблона. Каковы основные элементы проектного ша- блона?
• Преимущества шаблонов. Почему шаблоны стоят того, чтобы их изучать?


//--------------------------------------------------------------------------------------------------------------------------------------------//

Краткий обзор проектных шаблонов

По существу, проектный шаблон состоит из четырех частей: названия, постановки задачи, описания ее решения и последствий.


//--------------------------------------------------------------------------------------------------------------------------------------------//

Постановка задач

Поставить задачу намного труднее, чем выбрать какое-нибудь решение из каталога шаблонов. 
И это одна из причин, по которым некоторые шаблоны могут применяться неправильно.

В шаблонах очень тщательно описывается предметная область решаемой задачи. 
Сначала кратко описывается сама задача, а затем ее контекст. Обычно приводится типичный пример, дополняемый одной или
несколькими диаграммами. Далее анализируются особенности задачи и
различные ее проявления. Описываются также все признаки, которые могут помочь в постановке задачи.


//--------------------------------------------------------------------------------------------------------------------------------------------//

Решение

Решение сначала кратко описывается вместе с задачей. 
Оно также описывается подробно, как правило, с помощью диаграмм классов и взаимодействия на языке UML. В шаблон обычно включается пример кода.

И хотя код может быть предоставлен, в качестве решения никогда нельзя использовать способ вырезания и вставки. 
Напомним, что шаблон описывает только подход к решению задачи, поскольку в его реали зации могут проявиться сотни нюансов.

Рассмотрим в качестве примера инструкции, как сеять хлеб. Если вы слепо выполните все эти инструкции, то, 
скорее всего, будете голодать после сбора урожая. Намного полезным оказывается основанный на шаблоне подход, в котором
описываются различные условия применения этого шаблона. Основное решение задачи (вырастить хлеб) всегда будет одним и тем же (посеять
семена, поливать, собрать урожай), но реальные шаги, которые нужно будет предпринять, зависят от самых разных факторов, 
включая тип почвы, местность, наличие вредных насекомых и т.д.


//--------------------------------------------------------------------------------------------------------------------------------------------//

Следствия 

Каждое решение, принимаемое при проектировании, будет иметь обширный ряд следствий. 
Безусловно, это должно быть удовлетворительное решение поставленной задачи. 
Однажды осуществленное решение может идеально подходить для работы и сдругими шаблонами, ноделать это следует сособой осторожностью.


//--------------------------------------------------------------------------------------------------------------------------------------------//

Формат четыре банды 

Назначение. Краткая формулировка цели шаблона. Необходимо уметь спервоговзгляда понять суть шаблона.

• Мотивация. Задача описывается, как правило, для типичной ситуа- ции. На конкретных примерах легче понять, что представляет собой шаблон.

• Применимость. Исследование различных ситуаций, в которых можно применить шаблон. 
В то время как в разделе мотивации описывается типичная задача, в данном разделе определяются конкретные
ситуации и оцениваются преимущества решения в контексте каждой ИЗ НИХ.

• Структура/взаимодействие. Эти разделы могут содержать диаграм-
мы классов и взаимодействия, описывающие на языке UML отношения между классами и объекты в конкретном решении.

• Реализация. В данном разделе рассматриваются подробностирешения. 
В нем исследуются любые вопросы, которые могут возникнуть при применении предлагаемой методики, а также даются советы по ее применению.

• Пример кода. Явсегда перехожу сразу же кэтому разделу, поскольку считаю, что простой пример кода помогает лучше разобраться в шаблоне. 
Этот пример часто сведен к минимуму с целью продемонстри- ровать саму суть решения. 
Пример может быть написан на любом объектно-ориентированном языке. Разумеется, в следующих примерах кода всегда будет употребляться язык РНР.

• Примеры применения. Реальные системы, в которых встречается дан- ный шаблон (задача, контекст и решение). 
Существует мнение, что для того, чтобы считаться настоящим, шаблон должен присутствовать по крайней мере 
в трех широко известных контекстах. Это назы- вается иначе "правилом трех".

• Связанные шаблоны. Одни шаблоны порождают другие. Применяя одно решение, можно создать контекст, в котором станет полезным
другое решение. Именно такие связи исследуются в этом разделе, где могут также обсуждаться шаблоны, 
некоторые сходства в задаче и решении, а также любые предшествующие шаблоны, определенные где-нибудь еще и служащие основанием 
для построения текущего шаблона.


//--------------------------------------------------------------------------------------------------------------------------------------------//

• Шаблоны определяют задачи

Определяя распространенные задачи, шаблоны помогают улучшить проект. А иногда первый шаг к решению - это осознание возникшего затруднения.


• Шаблон определяет решения 

Определив и осознав возникшее затруднение (и убедившись, что оно действительно составляет проблему), вы получаете с помощью проектного
шаблона доступ крешению, атакже канализу последствий его применения. И хотя шаблон совсем не избавляет вас от необходимости рассмотреть по-
следствия выбранного решения, вы по крайней мере будете уверены, что пользуетесь проверенной методикой.


• Шаблоны предоставлены для совместной работы

Каталоги шаблонов обычно разрабатываются с расчетом на такого рода совместную работу, 
а возможность составления шаблонов всегда документируется в самом шаблоне.


• Шаблоны способствуют удачным проектам 

В проектных шаблонах демонстрируются и применяются принципы объектно-ориентированного проектирования. 
Поэтому изучение проектных шаблонов может дать больше, чем конкретное решение в определенном контексте. 
Это может привести к новому представлению, как объединить объекты и классы для достижения поставленной цели. 


• Шаблоны применяются во фреймворках 

Лень иногда оказывается во благо, и поэтому вы можете вполне воспользоваться такими стандартными каркасами, как 
Zend, Code Igniter или Symfony, или же скопировать код из готовых проектов. 
Ясное понимание основ проектных шаблонов поможет вам быстро освоить программный интерфейс API этих каркасов.

//--------------------------------------------------------------------------------------------------------------------------------------------//

*/